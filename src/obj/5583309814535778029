("   data Just: a -> Maybe a;                                                  match Just 5 with                        (Just x) -> x                 ",TestRec {_source = "   data Just: a -> Maybe a;                                                  match Just 5 with                        (Just x) -> x                 ", _ast = Right (TypExpr (TypeSymP "Just") (TypeAbsP (TypeApp (TypeApp (TypeSym (TypeSymP "->")) (TypeVar (TypeVarP "a"))) (TypeApp (TypeSym (TypeSymP "Maybe")) (TypeVar (TypeVarP "a"))))) (Just (MatExpr (AppExpr (VarExpr (ConVal (TypeSym (TypeSymP "Just")))) (VarExpr (LitVal (NumLit 5.0)))) [(ConPatt (TypeSymP "Just") [ValPatt (SymVal (Sym "x"))],VarExpr (SymVal (Sym "x")))]))), _types = Right (TypExpr (TypeSymP "Just") (TypeAbsP (TypeApp (TypeApp (TypeSym (TypeSymP "->")) (TypeVar (TypeVarP "a"))) (TypeApp (TypeSym (TypeSymP "Maybe")) (TypeVar (TypeVarP "a"))))) (Just (MatExpr (AppExpr (VarExpr (ConVal (TypeSym (TypeSymP "Just")))) (VarExpr (LitVal (NumLit 5.0)))) [(ConPatt (TypeSymP "Just") [ValPatt (SymVal (Sym "x"))],VarExpr (SymVal (Sym "x")))]))), _js = Right "var jmId_0;jmId_0 = (function(){var Just;var jmId_1;jmId_1 = (function($0){this[0] = $0;});Just = (function(jmId_2){return new jmId_1(jmId_2);});Just.__type__ = jmId_1;var jmId_3;jmId_3 = Just(5.0);if((jmId_3 instanceof Just.__type__)){return jmId_3[0];};throw(\"Pattern Match Exhausted\");})();console.log(jmId_0);", _evaled = Right "5\n"})