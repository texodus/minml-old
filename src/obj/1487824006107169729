("   let x = {x: 4; y: 6}   \n   let y = {x: 4; z: 3}   \n   x == y                 \n",TestRec {_source = "   let x = {x: 4; y: 6}   \n   let y = {x: 4; z: 3}   \n   x == y                 \n", _ast = Right (LetExpr (Sym "x") (RecExpr (Record (fromList [("x",VarExpr (LitVal (NumLit 4.0))),("y",VarExpr (LitVal (NumLit 6.0)))]))) (Just (LetExpr (Sym "y") (RecExpr (Record (fromList [("x",VarExpr (LitVal (NumLit 4.0))),("z",VarExpr (LitVal (NumLit 3.0)))]))) (Just (AppExpr (AppExpr (VarExpr (SymVal (Sym "=="))) (VarExpr (SymVal (Sym "x")))) (VarExpr (SymVal (Sym "y")))))))), _types = Left (Err "Types do not unify\n  {x: Double, y: Double} and {x: Double, z: Double}"), _js = Right "var jmId_0;jmId_0 = (function(){var jmId_1;jmId_1 = { 'x': 4.0,'y': 6.0};var jmId_4;jmId_4 = { 'x': 4.0,'z': 3.0};return (jmId_1==jmId_4);})();console.log(jmId_0);", _evaled = Right "false\n"})