("\n                  \n                    Cons: a -> List a -> List a         \n                    Nil: List a   \n                    \n                    `bind first (a) to (b); (c)` =\n                        match a with \n                        Cons b y -> c\n                        z -> 0\n\n                    bind first Cons 1 (Cons 2 Nil) to 1\n                    2     \n\n                ",TestRec {_source = "\n                  \n                    Cons: a -> List a -> List a         \n                    Nil: List a   \n                    \n                    `bind first (a) to (b); (c)` =\n                        match a with \n                        Cons b y -> c\n                        z -> 0\n\n                    bind first Cons 1 (Cons 2 Nil) to 1\n                    2     \n\n                ", _ast = Right (TypExpr (TypeSymP "Cons") (TypeAbsP (TypeApp (TypeApp (TypeSym (TypeSymP "->")) (TypeVar (TypeVarP "a"))) (TypeApp (TypeApp (TypeSym (TypeSymP "->")) (TypeApp (TypeSym (TypeSymP "List")) (TypeVar (TypeVarP "a")))) (TypeApp (TypeSym (TypeSymP "List")) (TypeVar (TypeVarP "a")))))) (Just (TypExpr (TypeSymP "Nil") (TypeAbsP (TypeApp (TypeSym (TypeSymP "List")) (TypeVar (TypeVarP "a")))) (Just (MatExpr (AppExpr (AppExpr (VarExpr (ConVal (TypeSym (TypeSymP "Cons")))) (VarExpr (LitVal (NumLit 1.0)))) (AppExpr (AppExpr (VarExpr (ConVal (TypeSym (TypeSymP "Cons")))) (VarExpr (LitVal (NumLit 2.0)))) (VarExpr (ConVal (TypeSym (TypeSymP "Nil")))))) [(ConPatt (TypeSymP "Cons") [ValPatt (LitVal (NumLit 1.0)),ValPatt (SymVal (Sym "y"))],VarExpr (LitVal (NumLit 2.0))),(ValPatt (SymVal (Sym "z")),VarExpr (LitVal (NumLit 0.0)))]))))), _types = Right (TypExpr (TypeSymP "Cons") (TypeAbsP (TypeApp (TypeApp (TypeSym (TypeSymP "->")) (TypeVar (TypeVarP "a"))) (TypeApp (TypeApp (TypeSym (TypeSymP "->")) (TypeApp (TypeSym (TypeSymP "List")) (TypeVar (TypeVarP "a")))) (TypeApp (TypeSym (TypeSymP "List")) (TypeVar (TypeVarP "a")))))) (Just (TypExpr (TypeSymP "Nil") (TypeAbsP (TypeApp (TypeSym (TypeSymP "List")) (TypeVar (TypeVarP "a")))) (Just (MatExpr (AppExpr (AppExpr (VarExpr (ConVal (TypeSym (TypeSymP "Cons")))) (VarExpr (LitVal (NumLit 1.0)))) (AppExpr (AppExpr (VarExpr (ConVal (TypeSym (TypeSymP "Cons")))) (VarExpr (LitVal (NumLit 2.0)))) (VarExpr (ConVal (TypeSym (TypeSymP "Nil")))))) [(ConPatt (TypeSymP "Cons") [ValPatt (LitVal (NumLit 1.0)),ValPatt (SymVal (Sym "y"))],VarExpr (LitVal (NumLit 2.0))),(ValPatt (SymVal (Sym "z")),VarExpr (LitVal (NumLit 0.0)))]))))), _js = Right "var jmId_0;jmId_0 = (function(){var Cons;var jmId_1;jmId_1 = (function($0,$1){this[0] = $0;this[1] = $1;});Cons = (function(jmId_2){return (function(jmId_3){return new jmId_1(jmId_2,jmId_3);});});Cons.__type__ = jmId_1;var Nil;var jmId_4;jmId_4 = (function(){});Nil = new jmId_4();Nil.__type__ = jmId_4;var jmId_5;jmId_5 = Cons(1.0)(Cons(2.0)(Nil));if(((jmId_5 instanceof Cons.__type__)&&((1.0==jmId_5[0])&&true))){return 2.0;};return 0.0;})();console.log(jmId_0);", _evaled = Right "2\n"})